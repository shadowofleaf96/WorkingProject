<!DOCTYPE html>
<html>
  <head>
    <title>User Profile</title>
    <style>
      #form {
        background: rgba(0, 0, 0, 0.15);
        padding: 0.25rem;
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        height: 3rem;
        box-sizing: border-box;
        backdrop-filter: blur(10px);
      }
      #input {
        border: none;
        padding: 0 1rem;
        flex-grow: 1;
        border-radius: 2rem;
        margin: 0.25rem;
      }
      #input:focus {
        outline: none;
      }
      #form > button {
        background: #333;
        border: none;
        padding: 0 1rem;
        margin: 0.25rem;
        border-radius: 3px;
        outline: none;
        color: #fff;
      }

      #messages {
        list-style-type: none;
        margin: 0;
        padding: 0;
      }
      #messages > li {
        padding: 0.5rem 1rem;
      }
      #messages > li:nth-child(odd) {
        background: #efefef;
      }
      body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
        padding: 20px;
      }
      .container {
        background-color: #fff;
        border-radius: 5px;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
      }
      h1 {
        margin-top: 0;
      }
      .logout-button {
        background-color: #ff6347;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 10px;
      }
      .logout-button:hover {
        background-color: #ff4433;
      }

      .form-group-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        margin-top: 10px;
        border-radius: 3px;
        padding: 10px 20px;
        cursor: pointer;
      }

      .form-group-button:hover {
        background-color: #0056b3;
      }
      /* Chat container */
      .chat-container {
        background-color: #ffffff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        width: 400px;
        padding: 20px;
        margin-top: 20px;
      }

      /* Chat messages */
      .chat-messages {
        height: 100px;
        width: 80%;
        overflow: scroll;
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 10px;
      }

      /* Chat input */
      #chat-input {
        width: 80%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-bottom: 10px;
      }

      /* Send button */
      #send-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 3px;
        cursor: pointer;
        font-size: 16px;
      }

      #send-button:hover {
        background-color: #0056b3;
      }
    </style>
    <script src="/socket.io/socket.io.js"></script>
  </head>
  <body>
    <div class="container">
      <h1>Welcome to your profile, <%= username %></h1>

      <form action="/logout" method="GET">
        <button class="logout-button" type="submit">Logout</button>
      </form>
      <form action="/edit-profile" method="GET">
        <button class="form-group-button" type="submit">Edit Profile</button>
      </form>
    </div>
    <!-- Chat interface -->
    <div class="chat-container">
      <div class="chat-messages" id="chat-messages"></div>
      <input type="text" id="chat-input" placeholder="Type your message..." />
      <button id="send-button" type="button" onclick="sendMessage()">
        Send
      </button>
    </div>

    <script>
      const socket = io();
      // Listen for user-connected events
      socket.on("user-connected", (data) => {
        console.log(
          `${data.username} connected with socket id ${data.socketId}`
        );
        // Display user connection notification in your UI
        const usernameElement = document.createElement("li");
        usernameElement.className = "user-connected";
        usernameElement.textContent = data.username;
        document.body.appendChild(usernameElement);
      });

      // Listen for user-disconnected events
      socket.on("user-disconnected", (data) => {
        console.log(
          `${data.username} disconnected from socket id ${data.socketId}`
        );
        // Find the <span> element with the disconnected user's username
        const usernameElements = document.querySelectorAll(".user-connected");
        usernameElements.forEach((element) => {
          if (element.textContent === data.username) {
            element.style.fontWeight = "900" ; 
            element.style.color = "red"; // You can choose any color you like
          }
        });
      });

      // Function to send a chat message
      function sendMessage() {
        const messageInput = document.getElementById("chat-input");
        if (messageInput.value.length == 0) {
          alert("Write your Message");
        } else {
          const message = messageInput.value;
          socket.emit("message", message);
          messageInput.value = "";
        }
      }

      // Function to display incoming chat messages
      socket.on("message", (data) => {
        const chatMessages = document.getElementById("chat-messages");
        const messageElement = document.createElement("div");
        messageElement.innerText = `${data.from}: ${data.text}`;
        chatMessages.appendChild(messageElement);
      });
    </script>
  </body>
</html>
